[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[gcode_macro PURGE]
gcode:    
     G92 E0
     G1 X5 Y4 Z0.85 F12000;
     G1 X25 Y4 E40 F100;
     G1 X35 F18000;

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set bed = params.BED|int %}
    {% set hotend = params.HOTEND|int %}
    M117 Preheating
    M190 S{bed}
    M109 S150
    M117 Preheated
    SET_GCODE_OFFSET Z=0
    M117 Z offset set to 0
    M117 Homing
    G28
    M117 Cleaning nozzle
    CLEAN_NOZZLE
    M106 S0
    M117 QGL
    G32 START_PRINT=1               ; home all axes
    G90
    M117 Calibrating Bed Mesh
    BED_MESH_CALIBRATE
    G0 Z30
    M117 Preheating to printing temps
    M109 S{hotend}
    M117 Cleaning nozzle
    CLEAN_NOZZLE
    M117 Purging
    PURGE
    G1 Z20 F3000                   ; move nozzle away from bed
    G92 E0
    STATUS_PRINTING
    M117 Printing

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-25.0 F3600                 ; retract filament
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F18000  ; park nozzle at rear

    TURN_OFF_HEATERS
    M107                                     ; turn off fan
    SET_FAN_SPEED FAN=nevermore SPEED=0
    
    BED_MESH_CLEAR
    STATUS_READY
    SDCARD_RESET_FILE
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: BASE_CANCEL_PRINT
gcode:
  PRINT_END
  BASE_CANCEL_PRINT
